# The http manager configuration
# This option controls mostly the headers and polices for the http
# You are free to adjust these settings as needed.
http:
    # An associative array of the HTTP headers added before making the request.
    # This value must use the format "header-name: header-value".
    headers:
        # Here you may configure your settings for cross-origin resource sharing or "CORS".
        # This determines what cross-origin operations may execute in web browsers.
        #
        # To learn more: https://www.w3.org/TR/cors/ and https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS
        cors:
            # You can enable CORS for 1 or multiple patterned paths. Example: ['api/*']
            allowedPaths: ~

            # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin
            allowedOrigins: "*"

            # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers
            allowedHeaders: "*"

            # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Methods
            allowedMethods: "*"

            # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials
            allowCredentials: true

            # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Expose-Headers
            exposedHeaders: ~

            # Sets Max allowed age in seconds to the response header
            maxAge: ~

        # Automatically add headers to every request passed to PHP.
        request: ~

        # Automatically add headers to every response.
        response:
            X-Powered-By: "%env(APP_NAME|BiuradPHP-Framework)%"

    # Here you may configure your settings for http policies resource sharing
    # This determines the http policies operations execute in web browsers.
    policies:
        # Prevent or allow some of the mobile network providers, browsers or websites
        # from modifying the response content in an iframe.
        # see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
        frame_policy: SAMEORIGIN

        # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
        content_security_policy:
            font-src: "'self' blob: data: fonts.gstatic.com fonts.googleapis.com"
            media-src: "'self' blob: data:"
            object-src: "'self' blob: data:"
            default-src: "'self' www.google.com www.gstatic.com"
            form-action: "'self'"
            script-src: "'self' 'unsafe-inline' 'unsafe-eval' cdnjs.cloudflare.com www.google.com www.gstatic.com"
            style-src: "'self' 'unsafe-inline' fonts.googleapis.com"
            worker-src: "'self' blob:"
            connect-src: "'self' blob: api.biurad.com"
            img-src: "'self' blob: data: cdn.biurad.com"
            report-uri: https://biurad.report-uri.com/r/d/csp/enforce

        # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy-Report-Only
        csp_report_only: ~

        # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy
        feature_policy: ~

    # With HTTP Caching, you cache the full output of a page (i.e. the response) and
    # bypass your application entirely on subsequent requests.
    caching:
        # The number of seconds that a cache entry should be considered
        # fresh when no explicit freshness information is provided in a response.
        default_ttl: 0

        # Set of request headers that trigger "private" cache-control behavior on responses.
        private_headers: [Authorization, Cookie]

        # Specifies whether the client can force a cache reload by including a
        # Cache-Control "no-cache" directive in the request
        allow_reload: true

        # Specifies whether the client can force a cache revalidate by including
        # a Cache-Control "max-age=0" directive in the request.
        allow_revalidate: true

        # Specifies the default number of seconds (the granularity is the second as the
        # Response TTL precision is a second) during which the cache can immediately return
        # a stale response while it revalidates it in the background
        stale_while_revalidate: 2

        # Specifies the default number of seconds (the granularity is the second) during which
        # the cache can serve a stale response when an error is encountered
        stale_if_error: 60

        # When pages contain dynamic parts, you may not be able to cache entire pages,
        # but only parts of it. Configure different cache strategies for specific parts of your page.
        # Support only "esi" or "ssi".
        surrogate: ~

    # The emitters that will emit response headers to the web browser.
    emitters:
        - Laminas\HttpHandlerRunner\Emitter\SapiStreamEmitter
